/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.FoodBankOrganizationRole;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.organization.LogisticOrganization;
import business.organization.Organization;
import static business.triggerEmail.TriggerEmail.orderConfirmationEmail;
import business.userAccount.UserAccount;
import business.workQueue.PantryWorkRequest;
import business.workQueue.WorkRequest;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aelinadas
 */
public class LogisticsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogisticsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private LogisticOrganization logisticOrganization;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private PantryWorkRequest toBeChanged;

    public LogisticsJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.logisticOrganization = (LogisticOrganization) organization;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        initComponents();
        populateResponseTable();
        setTabInitial();
        addressJPanel.setVisible(false);
        
        chooserDate.setDate(new Date());
        chooserDate.setMinSelectableDate(new Date());
        JTextFieldDateEditor editor = (JTextFieldDateEditor) chooserDate.getDateEditor();
        editor.setEditable(false);
        editor.setBackground(Color.white);
        
        JFormattedTextField formattedTextField = ((JSpinner.DefaultEditor) timeStamp.getEditor()).getTextField();
        formattedTextField.setEditable(false);
        formattedTextField.setBackground(Color.white);
        this.setBackground(new Color(255, 255, 255));
        this.setSize(1440, 900);
    }

    public void populateResponseTable() {
        DefaultTableModel model = (DefaultTableModel) tblLogistics.getModel();
        model.setRowCount(0);
        for (WorkRequest request : logisticOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender();
            row[2] = request.getReceiver() == null ? null : request.getReceiver();
            row[3] = request.getStatus();
            model.addRow(row);
        }
    }
    
    private void setTabInitial() {
        lblDeliveryDate.setVisible(false);
        lblExpectedTime.setVisible(false);
        chooserDate.setVisible(false);
        timeStamp.setVisible(false);
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tblLogistics = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnUnassigned = new javax.swing.JButton();
        btnShip = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.HOUR);
        timeStamp = new javax.swing.JSpinner(sm);
        lblDeliveryDate = new javax.swing.JLabel();
        lblExpectedTime = new javax.swing.JLabel();
        addressJPanel = new javax.swing.JPanel();
        lblAddress = new javax.swing.JLabel();
        lblCode = new javax.swing.JLabel();
        btnCancelAddress = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        txtCode = new javax.swing.JTextField();
        lblDeliveryAddress = new javax.swing.JLabel();
        refreshTestJButton2 = new javax.swing.JButton();
        chooserDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        tblLogistics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Logistics", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblLogistics);

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnUnassigned.setText("Unassign");
        btnUnassigned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnassignedActionPerformed(evt);
            }
        });

        btnShip.setText("Ready to Ship");
        btnShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipActionPerformed(evt);
            }
        });

        btnView.setText("View Address");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        JSpinner.DateEditor de= new JSpinner.DateEditor(timeStamp, "HH:mm");
        timeStamp.setEditor(de);

        lblDeliveryDate.setText("Delivery Date:");

        lblExpectedTime.setText("Expected Time:");

        lblAddress.setText("Address:");

        lblCode.setText("Zip Code:");

        btnCancelAddress.setText("Cancel");
        btnCancelAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddressActionPerformed(evt);
            }
        });

        txtAddress.setEditable(false);

        txtCode.setEditable(false);

        lblDeliveryAddress.setText("Delivery Address");

        javax.swing.GroupLayout addressJPanelLayout = new javax.swing.GroupLayout(addressJPanel);
        addressJPanel.setLayout(addressJPanelLayout);
        addressJPanelLayout.setHorizontalGroup(
            addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressJPanelLayout.createSequentialGroup()
                .addGroup(addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addressJPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lblDeliveryAddress))
                    .addGroup(addressJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCode)
                        .addGap(20, 20, 20)
                        .addGroup(addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelAddress)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addressJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAddress)
                        .addGap(26, 26, 26)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        addressJPanelLayout.setVerticalGroup(
            addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressJPanelLayout.createSequentialGroup()
                .addComponent(lblDeliveryAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(addressJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelAddress))
        );

        refreshTestJButton2.setBackground(new java.awt.Color(255, 255, 255));
        refreshTestJButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshTestJButton2.setBorder(null);
        refreshTestJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel3)
                        .addGap(387, 387, 387))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDeliveryDate)
                                    .addComponent(lblExpectedTime))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chooserDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(timeStamp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(37, 37, 37)
                                .addComponent(addressJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnShip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUnassigned, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAssign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 413, Short.MAX_VALUE)
                .addComponent(refreshTestJButton2)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(refreshTestJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAssign)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUnassigned)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShip)
                        .addGap(9, 9, 9)
                        .addComponent(btnView))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addressJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDeliveryDate)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chooserDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExpectedTime)
                            .addComponent(timeStamp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmit)
                            .addComponent(btnCancel))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:      
        setTabInitial();
        addressJPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblLogistics.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (((PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0)).getStatus().equalsIgnoreCase("SHIPPED")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            PantryWorkRequest pantryWorkRequest = (PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0);
            if (!pantryWorkRequest.isAlreadyAssignedLogistic()) {
                pantryWorkRequest.setAlreadyAssignedLogistic(true);
                pantryWorkRequest.setReceiver(userAccount);
                pantryWorkRequest.setStatus("PROCESSING");
                populateResponseTable();
            } else {
                JOptionPane.showMessageDialog(null, "This Request has already been assigned.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblLogistics.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        PantryWorkRequest pantryWorkRequest = (PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0);
        if (((PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0)).getStatus().equalsIgnoreCase("SHIPPED")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (pantryWorkRequest.getReceiver()== null) {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself, before processing.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            if (pantryWorkRequest.getReceiver().getUsername().equals(userAccount.getUsername())) {
                lblDeliveryDate.setVisible(true);
                lblExpectedTime.setVisible(true);
                chooserDate.setVisible(true);
                timeStamp.setVisible(true);
                btnSubmit.setVisible(true);
                btnCancel.setVisible(true);
                addressJPanel.setVisible(false);
            }else {
                JOptionPane.showMessageDialog(null, "Sorry, this work request is not assigned with you.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }    
    }//GEN-LAST:event_btnShipActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblLogistics.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        PantryWorkRequest pantryWorkRequest = (PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0); 
        if (((PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0)).getStatus().equalsIgnoreCase("SHIPPED")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } if (pantryWorkRequest.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself, before processing.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dateFormat.format(chooserDate.getDate());
            String[] time = timeStamp.getValue().toString().split(" ");
            String[] pretimeStamp = time[3].split(":");
            String timeStamp=pretimeStamp[0]+":"+pretimeStamp[1];
            if (date.equalsIgnoreCase("") || timeStamp.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Please set both shipping date and time.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
             }
            else{
                pantryWorkRequest.setMessage("Date: " + date + ", Time:  " + timeStamp);
                pantryWorkRequest.setStatus("SHIPPED");
                setTabInitial();
                addressJPanel.setVisible(false);
                populateResponseTable();
                orderConfirmationEmail(pantryWorkRequest.getSender().getUsername(), pantryWorkRequest.getSender().getEmployee().getName(), enterprise.getName(), date, timeStamp, pantryWorkRequest.getAddress()+", "+pantryWorkRequest.getZipCode());
            }    
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblLogistics.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            PantryWorkRequest request = (PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0); 
            addressJPanel.setVisible(true);
            txtAddress.setText(request.getAddress());
            txtCode.setText(request.getZipCode() + "");
            setTabInitial();
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUnassignedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnassignedActionPerformed
        int selectedRow = tblLogistics.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (((PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0)).getStatus().equalsIgnoreCase("SHIPPED")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            PantryWorkRequest pantryWorkRequest = (PantryWorkRequest) tblLogistics.getValueAt(selectedRow, 0);
            if (pantryWorkRequest.isAlreadyAssignedLogistic()&& pantryWorkRequest.getReceiver().getUsername().equals(userAccount.getUsername())) {
                pantryWorkRequest.setAlreadyAssignedLogistic(false);
                pantryWorkRequest.setReceiver(null);
                pantryWorkRequest.setStatus("WITH LOGISTICS");
                populateResponseTable();
            } else {
                JOptionPane.showMessageDialog(null, "Sorry, this work request is not assigned with you.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnUnassignedActionPerformed

    private void btnCancelAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddressActionPerformed
        // TODO add your handling code here:
        txtAddress.setText("");
        txtCode.setText("");
        addressJPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelAddressActionPerformed

    private void refreshTestJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButton2ActionPerformed
        // TODO add your handling code here:
        populateResponseTable();
    }//GEN-LAST:event_refreshTestJButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addressJPanel;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelAddress;
    private javax.swing.JButton btnShip;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUnassigned;
    private javax.swing.JButton btnView;
    private com.toedter.calendar.JDateChooser chooserDate;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblDeliveryAddress;
    private javax.swing.JLabel lblDeliveryDate;
    private javax.swing.JLabel lblExpectedTime;
    private javax.swing.JButton refreshTestJButton2;
    private javax.swing.JTable tblLogistics;
    private javax.swing.JSpinner timeStamp;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCode;
    // End of variables declaration//GEN-END:variables
}
