/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalAdminWorkArea;

import business.EcoSystem;
import business.employee.Employee;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.OrganizationDirectory;
import business.role.Role;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageEmployeesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeesJPanel
     */
    private OrganizationDirectory organizationDirectory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;

    public ManageEmployeesJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organizationDirectory = enterprise.getOrganizationDirectory();
        this.ecoSystem=ecoSystem;
        setInitial();
        populateOrganizationComboForEmp();
        this.setSize(1440, 900);

    }

    public void setInitial() {
        detailsPanel.setVisible(false);
        empUserNameTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameLabel1.setForeground(Color.BLACK);
        empPasswordTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordLabel1.setForeground(Color.BLACK);
    }

    private void populateEmployeeTable(Organization organization) {
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();
        model.setRowCount(0);
        for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
            Object[] row = new Object[4];
            row[0] = userAccount.getEmployee().getId();
            row[1] = userAccount.getEmployee();
            row[2] = userAccount;
            row[3] = userAccount.getRole();
            model.addRow(row);

        }
    }

    public void populateOrganizationEmpComboBox() {
        organizationEmpComboBox.removeAllItems();
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationEmpComboBox.addItem(organization);
        }
    }

    public void populateOrganizationComboForEmp() {
        organizationForEmpComboBox.removeAllItems();
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationForEmpComboBox.addItem(organization);
        }
    }
    
    public boolean isUniqueInEcosystem(String userName){
        Boolean notFound=true;
        for (Network network : ecoSystem.getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
               notFound  = e.getUserAccountDirectory().checkIfUsernameIsUnique(userName);
                if (notFound) {
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                        notFound=organization.getUserAccountDirectory().checkIfUsernameIsUnique(userName);
                        if (!notFound) {
                            return notFound;
                        }
                    }
                }else{
                    return notFound;
                }                
            }            
        }
        return notFound;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        organizationForEmpComboBox = new javax.swing.JComboBox();
        cityLabel2 = new javax.swing.JLabel();
        detailsPanel = new javax.swing.JPanel();
        custNameLabel = new javax.swing.JLabel();
        empNameTextField = new javax.swing.JTextField();
        addressLabel1 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        zipCodeLabel1 = new javax.swing.JLabel();
        empUserNameTextField = new javax.swing.JTextField();
        userNameLabel1 = new javax.swing.JLabel();
        zipCodeTextField = new javax.swing.JTextField();
        passwordLabel1 = new javax.swing.JLabel();
        empPasswordTextField = new javax.swing.JPasswordField();
        userNameLabel2 = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        cityLabel = new javax.swing.JLabel();
        organizationEmpComboBox = new javax.swing.JComboBox();
        cityLabel1 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        userNameLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addNetworkBtn = new javax.swing.JButton();
        deleteNetworkBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        organizationForEmpComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Organization to view Employee>" }));
        organizationForEmpComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationForEmpComboBoxActionPerformed(evt);
            }
        });

        cityLabel2.setText("Organization:");

        detailsPanel.setBackground(new java.awt.Color(255, 255, 255));

        custNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        custNameLabel.setText("Name* ");

        empNameTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        empNameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        empNameTextField.setSelectionColor(new java.awt.Color(255, 255, 255));
        empNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                empNameTextFieldKeyTyped(evt);
            }
        });

        addressLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addressLabel1.setText("Address*");

        addressTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        addressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextFieldActionPerformed(evt);
            }
        });
        addressTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressTextFieldKeyTyped(evt);
            }
        });

        zipCodeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zipCodeLabel1.setText("ZipCode*");

        empUserNameTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        empUserNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empUserNameTextFieldActionPerformed(evt);
            }
        });

        userNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userNameLabel1.setText("User Name* ");

        zipCodeTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        zipCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zipCodeTextFieldKeyTyped(evt);
            }
        });

        passwordLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLabel1.setText("Password* ");

        empPasswordTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        empPasswordTextField.setSelectionColor(new java.awt.Color(255, 255, 255));
        empPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPasswordTextFieldActionPerformed(evt);
            }
        });

        userNameLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        userNameLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userNameLabel2.setText("User Account Information* ");

        submitBtn.setBackground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        cityLabel.setText("Employee Organization:");

        organizationEmpComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<<Select>>" }));
        organizationEmpComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpComboBoxActionPerformed(evt);
            }
        });

        cityLabel1.setText("Role:");

        roleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<<Select>>" }));
        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });

        userNameLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        userNameLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userNameLabel3.setText("Personal Information* ");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel2.setText("(5 digit zip code)");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(userNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(cityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(organizationEmpComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(userNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(empUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empPasswordTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addressLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(zipCodeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(custNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(empNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(21, 21, 21))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                            .addComponent(userNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(cityLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(submitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {empPasswordTextField, empUserNameTextField});

        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(organizationEmpComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel1))
                .addGap(18, 18, 18)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(custNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(empNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zipCodeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(empUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(empPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBtn)
                            .addComponent(submitBtn))
                        .addContainerGap())))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {empPasswordTextField, empUserNameTextField});

        addNetworkBtn.setText("Add Employee");
        addNetworkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNetworkBtnActionPerformed(evt);
            }
        });

        deleteNetworkBtn.setText("Delete Employee");
        deleteNetworkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteNetworkBtnActionPerformed(evt);
            }
        });

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "UserName", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(employeeJTable);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Manage Employees");

        refreshTestJButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshTestJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshTestJButton.setBorder(null);
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(357, 357, 357)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshTestJButton)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(cityLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(organizationForEmpComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addNetworkBtn)
                            .addComponent(deleteNetworkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(476, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addNetworkBtn, deleteNetworkBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backBtn)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel2)
                    .addComponent(organizationForEmpComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addNetworkBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteNetworkBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void organizationForEmpComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationForEmpComboBoxActionPerformed
        Organization organization = (Organization) organizationForEmpComboBox.getSelectedItem();
        if (organization != null) {
            populateEmployeeTable(organization);
        }
    }//GEN-LAST:event_organizationForEmpComboBoxActionPerformed

    private void organizationEmpComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpComboBoxActionPerformed
        // TODO add your handling code here:
        Organization org = (Organization) organizationEmpComboBox.getSelectedItem();
        if (org != null) {
            roleJComboBox.removeAllItems();
            for (Role role : org.getSupportedRole()) {
                roleJComboBox.addItem(role);
            }
        }
    }//GEN-LAST:event_organizationEmpComboBoxActionPerformed

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        
        if (organizationEmpComboBox.getSelectedItem()==null || roleJComboBox.getSelectedItem()==null) {
            JOptionPane.showMessageDialog(null, "Invalid input.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Organization organization = (Organization) organizationEmpComboBox.getSelectedItem();
        Role role = (Role) roleJComboBox.getSelectedItem();
        String name = empNameTextField.getText().trim();
        String address = addressTextField.getText().trim();
        String zipCode = zipCodeTextField.getText().trim();
        String userName = empUserNameTextField.getText().trim();
        String password = String.valueOf(empPasswordTextField.getPassword());
        empUserNameTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameLabel1.setForeground(Color.BLACK);
        if (userName == null || userName.equals("")) {
            empUserNameTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            userNameLabel1.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter a username.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!usernamePatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Enter a valid username.", "Error", JOptionPane.ERROR_MESSAGE);
            empUserNameTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            userNameLabel1.setForeground(Color.RED);
            return;
        }
        empUserNameTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameLabel1.setForeground(Color.BLACK);
        if (password.equalsIgnoreCase("") || password == null) {
            empPasswordTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            passwordLabel1.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter a password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Password must be atleast 6 characters and a combination of number, uppercase, lowercase and special characters $,&,#", "Error", JOptionPane.ERROR_MESSAGE);
            empPasswordTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            passwordLabel1.setForeground(Color.RED);
            empPasswordTextField.setText("");
            return;
        }
        empPasswordTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordLabel1.setForeground(Color.BLACK);
        if (addressTextField.getText().equalsIgnoreCase("") || zipCodeTextField.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please enter all fields.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (zipCodeTextField.getText().trim().length() != 5) {
            JOptionPane.showMessageDialog(null, "Please enter a valid zipcode.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (addressTextField.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid address.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (isUniqueInEcosystem(userName)) {
            Employee employee = organization.getEmployeeDirectory().createEmployee(name);
            employee.setAddress(address);
            employee.setZipCode(Integer.parseInt(zipCode));
            organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
            setInitial();
            populateEmployeeTable(organization);
        } else {
            JOptionPane.showMessageDialog(null, userName + " already exists.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private boolean passwordPatternCorrect() {
        char[] newPwd = empPasswordTextField.getPassword();
        String newPassword = String.valueOf(newPwd);
        Pattern p = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[$*#&])[A-Za-z\\d$*#&]{6,}$");
        Matcher m = p.matcher(newPassword);
        boolean b = m.matches();
        return b;
    }

    private boolean usernamePatternCorrect() {
        Pattern p = Pattern.compile("^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$");
        Matcher m = p.matcher(empUserNameTextField.getText().trim());
        boolean b = m.matches();
        return b;
    }

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        setInitial();
        empUserNameTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameLabel1.setForeground(Color.BLACK);
        empPasswordTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordLabel1.setForeground(Color.BLACK);
        empUserNameTextField.setText("");
        empNameTextField.setText("");
        empPasswordTextField.setText("");
        addressTextField.setText("");
        zipCodeTextField.setText("");
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void addNetworkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNetworkBtnActionPerformed
        // TODO add your handling code here:
        detailsPanel.setVisible(true);
        populateOrganizationEmpComboBox();
        empUserNameTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameLabel1.setForeground(Color.BLACK);
        empPasswordTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordLabel1.setForeground(Color.BLACK);
        empUserNameTextField.setText("");
        empNameTextField.setText("");
        empPasswordTextField.setText("");
        addressTextField.setText("");
        zipCodeTextField.setText("");       
    }//GEN-LAST:event_addNetworkBtnActionPerformed

    private void deleteNetworkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteNetworkBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = employeeJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            Employee employee = (Employee) employeeJTable.getValueAt(selectedRow, 1);
            UserAccount userAccount = (UserAccount) employeeJTable.getValueAt(selectedRow, 2);
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + employee + " complete records ?", "Message", dialogButton);
            if (dialogValue == JOptionPane.YES_OPTION) {
                Organization organization = (Organization) organizationForEmpComboBox.getSelectedItem();
                organization.getEmployeeDirectory().deleteEmployee(employee);
                organization.getUserAccountDirectory().deleteUserAccount(userAccount);
                populateEmployeeTable(organization);
                setInitial();
            }
        }
    }//GEN-LAST:event_deleteNetworkBtnActionPerformed

    private void addressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextFieldActionPerformed

    private void empUserNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empUserNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empUserNameTextFieldActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        populateEmployeeTable(enterprise);
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void empNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empNameTextFieldKeyTyped
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && code != KeyEvent.VK_BACK_SPACE && !Character.isWhitespace(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_empNameTextFieldKeyTyped

    private void addressTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextFieldKeyTyped
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        char c = evt.getKeyChar();
        if (!Character.isLetterOrDigit(c) && code != KeyEvent.VK_BACK_SPACE && !Character.isWhitespace(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_addressTextFieldKeyTyped

    private void zipCodeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zipCodeTextFieldKeyTyped
        // TODO add your handling code here:
        char enteredChar = evt.getKeyChar();
        if (!Character.isDigit(enteredChar) || (enteredChar == KeyEvent.VK_BACK_SPACE) || (enteredChar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_zipCodeTextFieldKeyTyped

    private void empPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empPasswordTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNetworkBtn;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLabel cityLabel1;
    private javax.swing.JLabel cityLabel2;
    private javax.swing.JLabel custNameLabel;
    private javax.swing.JButton deleteNetworkBtn;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JTextField empNameTextField;
    private javax.swing.JPasswordField empPasswordTextField;
    private javax.swing.JTextField empUserNameTextField;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox organizationEmpComboBox;
    private javax.swing.JComboBox organizationForEmpComboBox;
    private javax.swing.JLabel passwordLabel1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel userNameLabel1;
    private javax.swing.JLabel userNameLabel2;
    private javax.swing.JLabel userNameLabel3;
    private javax.swing.JLabel zipCodeLabel1;
    private javax.swing.JTextField zipCodeTextField;
    // End of variables declaration//GEN-END:variables
}
